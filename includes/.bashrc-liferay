
############################################
## Liferay specific bashrc customizations ##
############################################

export ANT_OPTS="-Xms2048m -Xmx4096m -XX:MaxPermSize=512m"

LIFERAY_DIR=`find ~ -maxdepth 3 -type d -name 'liferay' -print -quit`

# Alias - locate JSP files in portal portlet
alias findjsp='for file in `git ls-files | grep -v init | grep .jsp` ; do echo -e " :: ${file##*/}\n$(cat $file)" > $file ; done'

# Alias to start server/kill
function runserver {
  local repoRoot=$(git rev-parse --show-toplevel 2>/dev/null)
  echo "Starting server..."
  cd "$repoRoot" && ../bundles/tomcat*/bin/catalina.sh run | grep -E --color=always 'Error|Severe|severe|error|caused by|Caused By|ERROR|Caused by|$'
}

alias killserver='echo Killing Tomcat && kill -9 `ps aux | grep -v grep | grep tomcat | awk '"'"'{print $2}'"'"'`'

# Liferay run-gradle script to find gradle files in parent directories for portlet deployment
function rungradle {

  # Rename settings.gradle temporarily
  if [ -e settings.gradle ]
    then
      mv settings.gradle settings.gradle.tmp
  fi

  # Run regular gradle commands
  local root_level=$(git rev-parse --show-toplevel 2>/dev/null)

  if [[ -n "$root_level" && -f "$root_level/gradlew" ]]; then
    root_level="$root_level/gradlew"
  else
    root_level=$(which gradle)
  fi

  "$root_level" $@

  if [ -e settings.gradle.tmp ]
    then
      mv settings.gradle.tmp settings.gradle
  fi
}

alias rgcd='rungradle clean deploy'

# Git Format Patch
# Usage: fp <# of commits> <Commit Sha>
# Example: `fp 3 34s3446e`
function fp {
  local dirPath=`find ~ -maxdepth 3 -type d -name 'liferay' -print -quit`
  local fileCount=$(ls $dirPath/patch_files | wc -l)

  if [ "$fileCount" -gt "0" ]; then
    echo -e "\033[02;31mPatch folder already contains the following files:\033[01;00m"
    ls "$dirPath"/patch_files | while read -r file; do echo -e "\033[03;33mFile: \033[01;00m$file"; done

    while true; do
  echo -e "Y to keep existing files and continue. H to clear existing files and continue. N to stop and exit."
        read yn
        case $yn in
            [Yy]* )
    ls "$dirPath"/patch_files |
        while read -r file; do
      mv "$dirPath"/patch_files/"$file" "$dirPath"/patch_files/old-"$file"
        done;
    git format-patch -"$1" "$2" -o "$dirPath"/patch_files -q; break;;
      [Hh]* ) dp && git format-patch -"$1" "$2" -o "$dirPath"/patch_files -q; break;;
            [Nn]* ) echo "Selected No, Exiting."; return "0"; break;;
            * ) echo "Invalid response.";
        esac
    done

  else
    git format-patch -"$1" "$2" -o "$dirPath"/patch_files -q || { dp; echo -e "\033[02;33mPatch files were not created. Check arguments and try again... Clearing any old patch files.\033[01;00m"; return; }
  fi

  echo -e "Patch files in $dirPath/patch_files/"
  ls "$dirPath"/patch_files | while read -r file; do echo -e "\033[03;32mFile: \033[01;00m$file"; done
  echo "Navigate to topic branch and run command 'ap' to apply patch."
}

function ap {
  local dirPath=`find ~ -maxdepth 3 -type d -name 'liferay' -print -quit`
  ls "$dirPath"/patch_files | while read -r file; do echo -e "\033[03;33mPending: \033[01;00m$file"; done

  while true; do
    echo "Would you like to apply these patch files? (Y/N)"
    read yn
    case $yn in
          [Yy]* ) git am -3 /"$dirPath"/patch_files/*; echo -e "\033[00;33mIf there are merge conflicts, resolve in your text editor and use \033[00;32m'git am --continue', \033[00;31m'git am --abort', \033[00;00mor \033[00;33m'git am --skip'."; break;;
          [Nn]* ) echo "Selected No, Exiting."; break;;
          * ) echo "Invalid response.";
    esac
  done
}

function dp {
  echo "Cleaning patch files."
  local dirPath=`find ~ -maxdepth 3 -type d -name 'liferay' -print -quit`
  ls "$dirPath"/patch_files | while read -r file; do echo -e "\033[03;31mRemoved: \033[00;00m$file" && rm -f "$dirPath"/patch_files/"$file"; done
  echo "Patch files removed."
}

# Aliases to start tomcat servers for portal
# Jack-cli formatted to use lse and lsc git aliases. Takes 2 arguments: search-string, [branch-name]
function jlse {
  if [ -n "$2" ] && [ -n "$1" ]; then
    jack "$2" --stat --grep "$1" --pretty=format:'%C(yellow)%h%Creset %C(white)%s - %an%Creset (%C(green)%ar%Creset)';
  elif [ -z "$2" ] && [ -n "$1" ]; then
    jack --stat --grep "$1" --pretty=format:'%C(yellow)%h%Creset %C(white)%s - %an%Creset (%C(green)%ar%Creset)';
  else
    echo "Please pass at least one argument [search-string]. Example 'jlse LPS-99999 master'"
  fi
}

function jlsc {
  if [ -n "$2" ] && [ -n "$1" ]; then
    jack "$2" --grep "$1" --pretty=format:'%C(yellow)%h%Creset %C(white)%s - %an%Creset (%C(green)%ar%Creset)';
  elif [ -z "$2" ] && [ -n "$1" ]; then
    jack --grep "$1" --pretty=format:'%C(yellow)%h%Creset %C(white)%s - %an%Creset (%C(green)%ar%Creset)';
  else
    echo "Please pass at least one argument [search-string]. Example 'jlse LPS-99999 master'"
  fi
}

# Use node-gh to send PR
# SendPR function for submitting pull requests through nodeGH relating to JIRA tickets
function sendPR() {
    local branch_name=$(git rev-parse --abbrev-ref HEAD | grep -Eo '([A-Z]{3,}-)([0-9]+)' -m 1)
    gh pr -s "$1" -b "$2" -D "Hi @$1,<br><br>Attached is the fix for [$branch_name](http://issues.liferay.com/browse/$branch_name).<br><br>Let me know if you have any questions. Thanks."
}

function rungradle2 {
    mv ../settings.gradle ../settings.gradle.tmp
    rungradle clean deploy
    mv ../settings.gradle.tmp ../settings.gradle
}

function jira {
    local branch_name=$(git rev-parse --abbrev-ref HEAD | grep -Eo '([A-Z]{3,}-)([0-9]+)' -m 1)
    xdg-open https://issues.liferay.com/browse/"$branch_name" || open https://issues.liferay.com/browse/"$branch_name" || echo "Could not open Jira."
}

alias loopdir="cd $LIFERAY_DIR/ee-6.2.x/liferay-plugins-ee/portlets/loop-portlet/"
alias 62dir="cd $LIFERAY_DIR/ee-6.2.x/liferay-portal-ee/"
alias 70dir="cd $LIFERAY_DIR/7.0.x/liferay-portal-ee/"
alias 70pdir="cd $LIFERAY_DIR/7.0.x-private/liferay-portal-ee/"
alias masterdir="cd $LIFERAY_DIR/ce-master/liferay-portal/"

function lsl {
  local src_dir="$LIFERAY_DIR/ee-6.2.x/liferay-plugins-ee/portlets/loop-portlet/docroot/js/dist"
  local dst_dir="$LIFERAY_DIR/ee-6.2.x/bundles/tomcat-7.0.62/webapps/loop-portlet/js/dist"

  for file in "$src_dir"/*; do
    local filename=${file##*/}
    local dst="$dst_dir/$filename"

    [ -e "$dst" ] && rm "$dst"

    echo "Linking $filename"
    ln -f "$file" "$dst"
  done
}

function deployLoop {
  local deploy=ant clean deploy

  loopdir && "$deploy" &&
  cd ../asset-entry-set-portlet && "$deploy" &&
  cd ../asset-sharing-portlet && "$deploy" &&
  cd ../push-notifications-portlet && "$deploy" &&
  cd ../token-auth-portlet && "$deploy" &&
  cd ../marketplace-portlet && "$deploy" &&
  cd ../../themes/loop-theme && "$deploy" &&
  cd ../../hooks/portal-compat-hook && "$deploy" &&
  cd ../../webs/url-metadata-scraper-web && "$deploy" &&
  cd ../elasticsearch-web && "$deploy" &&
  cd ../../portlets/loop-portlet && "$deploy" &&
  clear &&
  echo Loop deployed.
}

function fixSql {
  echo "SET SESSION sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';"
  echo "SET GLOBAL sql_mode = 'STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION';"
}

alias setMonitor="sh ~/configs/scripts/work-extended-primary.sh"

alias i3config="vim ~/configs/i3/config"

alias acd="ant clean deploy"

function sfm {
  if [ "$1" ]; then
    git diff --stat --relative --name-only "$1".. | grep -E '.(tag|jsp.?|vm|ftl|js|(s)?css)$' | xargs check_sf;
  else
    echo -e "$fg_bold[red]Please choose a branch to compare changes to.$reset_color EG: sfm ee-6.2.x"
  fi
}
